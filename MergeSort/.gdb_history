n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
lay next
run 0 -10 450 3
b ft_calculate_sorting_b_to_a
run 0 -10 450 3
n
p times_to_rotate_a
b
n
n
n
n
n
p current[0]
p *current[0]
n
p *stack
n
n
n
ptype struct
ptype stack
ptype stack->a
r-n
rev-n
reverse-next
reverse-step
run 0 1 2 -10
n
n
n
p stack->b->size
n
n
p *stack->a
p current[1]->data.nb
p current[0]->data.nb
n
n
n
n
print times_to_rotate_a
n
n
print times_to_rotate_a
n
n
n
n
n
n
n
quit
quit
lay n
run 0 1 2 -4
b ft_calculate_sorting_size_five
run 0 1 2 -4
n
n
n
n
n
n
s
n
n
n
n
p *current[1]
p *current[0]->data
p current[0]->data
p current[1]->data
n
n
p current[1]->mov
n
p stack->a->size
p *current
p current
p *current
p current[]
p current[0]
p *current[0] *current[1]
p current[0]->data
p current[1]->data
n
n
p min->mov
n
n
n
n
p *stack
p stack->a
p *stack->a
n
l nxt
lay n
b ft_pre_sorting_push_except_min_max
run 1 5 4 2 3
n
n
n
p list->size
n
n
nn
n
p list->size
n
n
n
nn
p list
p *list
p *list->data
n
n
p list->size
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
quit
b ft_calculate_sorting_b_to_a
lay n
run 5 8 3 6 7 4 9 1 10 2
b
p *c_b
n
n
nnnn
n
quit
help dashboard
-layout
dashboard -layout
dashboard memory
dashboard memory
dashboard registers
lay n
run 5 8 9 11 -987
b 15
run    8 5 1 -997 01
dashboard source
dashboard threads
dashboard stack
dashboard assembly
quit
quit
quit
